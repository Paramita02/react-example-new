{"version":3,"sources":["logo.svg","component/AboutUs.js","component/Home.js","component/DynamicComponent.js","component/compC/ComponentC.js","component/failure/FailurePage.js","component/success/SuccessPage.js","component/login/LoginPage.js","component/UserForm.js","App.js","reportWebVitals.js","index.js"],"names":["AboutUs","Component","DynamicComponent","ComponentC","FailurePage","SucessPage","LoginPage","setToken","useState","setUsername","setPassword","type","id","className","onChange","e","target","value","regExp","RegExp","App","class","to","exact","path","element","this","state","authenticated","SuccessPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAAe,I,YCUAA,I,OCNIC,YCkBJC,I,OCZAC,I,OCAAC,ICRTC,E,4JACN,WACC,OACC,8BACC,gE,GAJsBJ,aASVI,ICcAC,MAnBf,YAAiC,EAAZC,SAAa,IAE9B,EAA8BC,qBAA9B,mBAAeC,GAAf,WACA,EAA8BD,qBAA9B,mBAAeE,GAAf,WAEA,OACI,gCACI,4CACA,iCACA,8CAAgB,uBAAOC,KAAK,OAAOC,GAAG,WAAWC,UAAU,WAAWC,SAAU,SAACC,GAAD,OAAKN,EAAYM,EAAEC,OAAOC,aAC1G,uBACA,8CAAgB,uBAAON,KAAK,WAAWC,GAAG,MAAMC,UAAU,WAAWC,SAAU,SAACC,GAAD,OAAKL,EAAYK,EAAEC,OAAOC,aAAiB,uBAC1H,wBAAQN,KAAK,SAAb,2B,8CChBNO,EAASC,OACZ,0CCYGC,GDciBnB,Y,4JCZrB,WACE,OAEE,qBAAKY,UAAU,MAAf,SACE,eAAC,IAAD,WACE,8BACE,oBAAIQ,MAAM,UAAV,SACE,6BAAI,cAAC,IAAD,CAAMC,GAAI,SAAV,yBAIR,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,QAAW,cAAC,EAAD,MACpCC,KAAKC,MAAMC,eACb,cAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,WAAWC,QAAS,cAACI,EAAD,kB,GAhBhC5B,cA0BHmB,IC7BAU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b477a093.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nfunction AboutUs(props) {\r\n    return (\r\n        <div>\r\n           <h2>About Us</h2> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AboutUs;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Home</h1>\r\n        <p>\r\n          <Link to=\"/login/\">Login</Link>\r\n        </p>\r\n        <p>\r\n          <Link to=\"/success\" >Success</Link>\r\n        </p>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport UserA from './UserA';\r\nimport UserB from './UserB';\r\nimport AboutUs from './AboutUs';\r\nimport Home from './Home';\r\n\r\nconst components={\r\n    //usera:UserA,\r\n    //userb:UserB\r\n    AboutUs:AboutUs,\r\n    Home:Home\r\n}\r\n\r\nfunction DynamicComponent(props) {\r\n    const SelectUser = components[props.user];\r\n    return (\r\n        <div>\r\n            <SelectUser/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DynamicComponent;","import React from 'react';\r\n\r\nfunction ComponentC(props) {\r\n    return (\r\n        <div>\r\n            <h2>This is Component C</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ComponentC;","import React from 'react';\r\n\r\nfunction FailurePage(props) {\r\n    return (\r\n        <div>\r\n            <h2>Login not successful!!!</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FailurePage;","import React, { Component } from 'react'; \r\n\r\nclass SucessPage extends Component{\r\nrender(){\r\n return(\r\n  <div>\r\n   <h2>Successfully logged in..</h2>\r\n  </div>\r\n  );\r\n }\r\n}\r\nexport default SucessPage;","import React, { useState } from 'react';\r\nimport {BrowserRouter,Link,Route,Router,Routes} from 'react-router-dom';\r\nimport FailurePage from '../failure/FailurePage';\r\nimport SuccessPage from '../success/SuccessPage';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction LoginPage({ setToken }) {\r\n\r\n    const[username,setUsername] = useState();\r\n    const[password,setPassword] = useState();\r\n\r\n    return (\r\n        <div>\r\n            <h2>Login Page</h2>\r\n            <form>\r\n            <label>USERNAME:<input type='text' id='username' className='userName' onChange={(e)=>setUsername(e.target.value)}/></label>\r\n            <br></br>\r\n            <label>PASSWORD:<input type='password' id='pwd' className='passWord' onChange={(e)=>setPassword(e.target.value)}/></label><br></br>\r\n            <button type='submit'>Submit</button>\r\n            </form>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React,{Component} from 'react';\r\n\r\nconst regExp = RegExp(\r\n   /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/)  \r\n\r\n\r\nconst formValid = ({isError,...rest}) =>{\r\n    let isValid = false;\r\n\r\n    Object.values(isError).forEach(val => {\r\n        if(val.length > 0){\r\n            isValid = false;\r\n        }\r\n        else{\r\n            isValid = true;\r\n        }\r\n    });\r\n\r\n    Object.values(rest).forEach(val =>{\r\n        if(val === null){\r\n            isValid = false;\r\n        }\r\n        else{\r\n            isValid = true;\r\n        }\r\n    });\r\n    return isValid;\r\n}\r\n\r\nclass UserForm extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name:'',\r\n            email:'',\r\n            password:'',\r\n            isError :{\r\n                name:'',\r\n                email:'',\r\n                password:''\r\n            }\r\n        }\r\n    }\r\n\r\n    onSubmit = e =>{\r\n        e.preventDefault();\r\n        if(formValid(this.state)){\r\n           console.log(this.state);\r\n          \r\n        }\r\n        else{\r\n            this.statconsole.error(); \r\n            console.log(\"form is invalid\");\r\n        }\r\n    };\r\n\r\n    formValChange = e =>{\r\n        e.preventDefault();\r\n        const{name,value} = e.target;\r\n\r\n        let isError = { ...this.state.isError};\r\n\r\n        switch (name) {\r\n                case \"name\":\r\n                isError.name =\r\n                value.length < 4 ? \"Name should be 4 characters Long\" : \"\";\r\n                break;\r\n\r\n                case \"email\":\r\n                isError.email = regExp.test(value) ? \"\" : \"Email address is invalid\";\r\n                break;\r\n\r\n                case \"password\":\r\n                isError.password =\r\n                value.length < 6 ? \"Password should be 6 characters Long\" : \"\";\r\n                break;\r\n\r\n                default:\r\n\r\n                break;\r\n\r\n            }\r\n\r\n        this.setState({\r\n            isError,\r\n            [name]: value\r\n            })\r\n        \r\n\r\n    };\r\n\r\n    render() {\r\n        const { isError } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onSubmit} noValidate>\r\n                    <div className='form-group'>\r\n                        <label>Name</label>\r\n                        <input type='text' className={isError.name.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n\r\n                        name='name' \r\n                        onChange={this.formValChange}\r\n                        />\r\n                        {isError.name.length > 0 && (\r\n                            <span className=\"invalid-feedback\">{isError.name}</span>\r\n                                )}\r\n\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label>Email</label>\r\n                        <input type ='email' className={isError.email.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n\r\n                        name='email'\r\n                        onChange={this.formValChange}\r\n                        />\r\n                        {isError.email.length > 0 && (\r\n                        <span className=\"invalid-feedback\">{isError.email}</span>\r\n                        )}\r\n\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label>Password</label>\r\n                        <input type='password' className='form-control'\r\n                        name='password'\r\n                        onChange={this.formValChange}\r\n                        />\r\n                    </div>\r\n                    <br/>\r\n                    <button type='submit' className='btn btn-black btn-danger'>Create User</button>\r\n                </form>\r\n                </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default UserForm;","import logo from './logo.svg';\nimport './App.css';\nimport { Component, useState } from 'react';\nimport DynamicComponent from './component/DynamicComponent';\nimport {BrowserRouter,Link,Route,Router,Routes} from 'react-router-dom';\nimport ComponentA from './component/compA/ComponentA';\nimport ComponentB from './component/compB/ComponentB';\nimport ComponentC from './component/compC/ComponentC';\n//import Home from './component/Home';\nimport LoginPage from './component/login/LoginPage';\nimport SuccessPage from './component/success/SuccessPage';\nimport FailurePage from './component/failure/FailurePage';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport UserForm from './component/UserForm';\n\nclass App extends Component {\n \n  render(){\n    return (\n    \n      <div className=\"App\" >\n        <BrowserRouter>\n          <nav>\n            <ul class='nostyle'>\n              <li><Link to =\"/login\">Login</Link></li>\n              \n            </ul>\n          </nav>\n          <Routes>\n            <Route exact path=\"/login\" element = {<LoginPage/>}/>\n            { this.state.authenticated && \n            <Route exact path=\"/success\" element={<SuccessPage/>} />\n          }\n          </Routes>\n        </BrowserRouter>\n        </div>\n    );\n  }\n  \n}\n\nexport default App;\n\n// Creating changing radio button components \n/*\nconst [user,changeUser] =useState(\"AboutUs\");\n      <DynamicComponent user = {user} />\n      <input type=\"radio\" id=\"html\" name=\"component\" value=\"AboutUs\" onChange={()=>changeUser('AboutUs')} defaultChecked/>\n      <label for=\"about-us\">About Us</label>  \n      <input type=\"radio\" id=\"html\" name=\"component\" value=\"Home\" onChange={()=>changeUser('Home')} />\n      <label for=\"home\">Home</label>  \n*/\n\n//Creating different user components\n/*\n\nconst [user,changeUser] =useState(\"usera\");\n<DynamicComponent user = {user} />\n      <button onClick={()=> changeUser('usera')}>Switch to User A</button>\n      <button onClick={()=> changeUser('userb')}>Switch to User B</button>\n    \n*/\n\n//Routing rendering example\n/*\n <BrowserRouter>\n        <nav>\n          <ul class='nostyle'>\n            <li><Link to =\"/compA\">Component A</Link></li>\n            <li><Link to =\"/compB\">Component B</Link></li>\n            <li><Link to =\"/compC\">Component C</Link></li>\n          </ul>\n        </nav>\n        <Routes>\n          <Route path=\"/compA\" element = {<ComponentA/>}/>\n          <Route path=\"/compB\" element = {<ComponentB/>}/>\n          <Route path=\"/compC\" element = {<ComponentC/>}/>\n        </Routes>\n      </BrowserRouter>\n*/\n\n/*\n\n\n*/\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}